/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet.collision;

import com.badlogic.gdx.physics.bullet.BulletBase;
import com.badlogic.gdx.physics.bullet.linearmath.*;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;
import com.badlogic.gdx.math.Matrix4;

public class btVoxelInfo extends BulletBase {
	private long swigCPtr;
	
	protected btVoxelInfo(final String className, long cPtr, boolean cMemoryOwn) {
		super(className, cPtr, cMemoryOwn);
		swigCPtr = cPtr;
	}
	
	/** Construct a new btVoxelInfo, normally you should not need this constructor it's intended for low-level usage. */ 
	public btVoxelInfo(long cPtr, boolean cMemoryOwn) {
		this("btVoxelInfo", cPtr, cMemoryOwn);
		construct();
	}
	
	@Override
	protected void reset(long cPtr, boolean cMemoryOwn) {
		if (!destroyed)
			destroy();
		super.reset(swigCPtr = cPtr, cMemoryOwn);
	}
	
	public static long getCPtr(btVoxelInfo obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	@Override
	protected void finalize() throws Throwable {
		if (!destroyed)
			destroy();
		super.finalize();
	}

  @Override protected synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				CollisionJNI.delete_btVoxelInfo(swigCPtr);
			}
			swigCPtr = 0;
		}
		super.delete();
	}

  public void setTracable(boolean value) {
    CollisionJNI.btVoxelInfo_tracable_set(swigCPtr, this, value);
  }

  public boolean getTracable() {
    return CollisionJNI.btVoxelInfo_tracable_get(swigCPtr, this);
  }

  public void setBlocking(boolean value) {
    CollisionJNI.btVoxelInfo_blocking_set(swigCPtr, this, value);
  }

  public boolean getBlocking() {
    return CollisionJNI.btVoxelInfo_blocking_get(swigCPtr, this);
  }

  public void setVoxelTypeId(int value) {
    CollisionJNI.btVoxelInfo_voxelTypeId_set(swigCPtr, this, value);
  }

  public int getVoxelTypeId() {
    return CollisionJNI.btVoxelInfo_voxelTypeId_get(swigCPtr, this);
  }

  public void setVoxelPosition(btVector3 value) {
    CollisionJNI.btVoxelInfo_voxelPosition_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getVoxelPosition() {
    long cPtr = CollisionJNI.btVoxelInfo_voxelPosition_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setCollisionShape(btCollisionShape value) {
    CollisionJNI.btVoxelInfo_collisionShape_set(swigCPtr, this, btCollisionShape.getCPtr(value), value);
  }

  public btCollisionShape getCollisionShape() {
    long cPtr = CollisionJNI.btVoxelInfo_collisionShape_get(swigCPtr, this);
    return (cPtr == 0) ? null : btCollisionShape.newDerivedObject(cPtr, false);
  }

  public void setCollisionOffset(btVector3 value) {
    CollisionJNI.btVoxelInfo_collisionOffset_set(swigCPtr, this, btVector3.getCPtr(value), value);
  }

  public btVector3 getCollisionOffset() {
    long cPtr = CollisionJNI.btVoxelInfo_collisionOffset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new btVector3(cPtr, false);
  }

  public void setFriction(float value) {
    CollisionJNI.btVoxelInfo_friction_set(swigCPtr, this, value);
  }

  public float getFriction() {
    return CollisionJNI.btVoxelInfo_friction_get(swigCPtr, this);
  }

  public void setRestitution(float value) {
    CollisionJNI.btVoxelInfo_restitution_set(swigCPtr, this, value);
  }

  public float getRestitution() {
    return CollisionJNI.btVoxelInfo_restitution_get(swigCPtr, this);
  }

  public void setRollingFriction(float value) {
    CollisionJNI.btVoxelInfo_rollingFriction_set(swigCPtr, this, value);
  }

  public float getRollingFriction() {
    return CollisionJNI.btVoxelInfo_rollingFriction_get(swigCPtr, this);
  }

  public btVoxelInfo() {
    this(CollisionJNI.new_btVoxelInfo__SWIG_0(), true);
  }

  public btVoxelInfo(btVoxelInfo other) {
    this(CollisionJNI.new_btVoxelInfo__SWIG_1(btVoxelInfo.getCPtr(other), other), true);
  }

  public btVoxelInfo(boolean _traceable, boolean _blocking, int _voxelTypeId, Vector3 _voxelPosition, btCollisionShape _collisionShape, Vector3 _collisionOffset, float _friction, float _restitution, float _rollingFriction) {
    this(CollisionJNI.new_btVoxelInfo__SWIG_2(_traceable, _blocking, _voxelTypeId, _voxelPosition, btCollisionShape.getCPtr(_collisionShape), _collisionShape, _collisionOffset, _friction, _restitution, _rollingFriction), true);
  }

  public boolean isEmpty() {
    return CollisionJNI.btVoxelInfo_isEmpty(swigCPtr, this);
  }

}
